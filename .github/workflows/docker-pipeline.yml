name: Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check for server changes
        id: check_server_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^server-side/'; then
            echo "server changed"
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "server not changed"
            echo "changed=false" >> $GITHUB_ENV
          fi

      - name: Login to Docker Hub
        if: env.changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push server Docker image
        if: env.changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./server-side
          file: ./server-side/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-project-server:latest

  build-client:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check for client changes
        id: check_client_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^client-side/'; then
            echo "client changed"
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "client not changed"
            echo "changed=false" >> $GITHUB_ENV
          fi

      - name: Login to Docker Hub
        if: env.changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push client Docker image
        if: env.changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./client-side
          file: ./client-side/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-project-client:latest

  build-extension:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check for extension changes
        id: check_extension_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^extension-ui/'; then
            echo "extension changed"
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "extension not changed"
            echo "changed=false" >> $GITHUB_ENV
          fi

      - name: Login to Docker Hub
        if: env.changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push extension Docker image
        if: env.changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./extension-ui
          file: ./extension-ui/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-project-extension:latest
